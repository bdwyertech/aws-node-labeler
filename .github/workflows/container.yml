name: Build & publish container to GitHub Container Registry

on:
  workflow_run:
    workflows: ['Go']
    types: [completed]
  workflow_dispatch:
    inputs:
      caller:
        description: 'The invoker of the workflow'
        required: false
        default: ''

env:
  GHCR_IMAGE_NAME: ghcr.io/bdwyertech/${{ github.event.repository.name }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && (github.event.workflow_run.conclusion == 'success')
    strategy:
      matrix:
        include:
          - prefix: ''
          #   ansible: false
          # - prefix: 'ansible-'
          #   ansible: true
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access

    steps:
      - name: Install Cosign
        uses: sigstore/cosign-installer@v2.8.1

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GHCR_IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.GHCR_IMAGE_NAME }}
          flavor: |
            latest=true
            prefix=${{ matrix.prefix }},onlatest=true
          tags: |
            type=ref,event=tag
            type=sha,enable=true,priority=100,prefix=${{ matrix.prefix }}${{ steps.date.outputs.date }}--,suffix=,format=short
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Sign Image
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo ${{ steps.build.outputs.imageid }}
          cosign sign --key env://COSIGN_PRIVATE_KEY $GHCR_IMAGE_NAME@${{ steps.build.outputs.digest }}
